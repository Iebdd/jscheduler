package project.scheduler.Controller;

import java.time.Instant;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import jakarta.inject.Inject;
import project.scheduler.Repositories.TokenRepository;
import project.scheduler.Repositories.UserRepository;
import project.scheduler.Util.Password;


@Controller // This means that this class is a Controller
@RequestMapping(path="/verify") // This means URL's start with /verify (after Application path)
public class VerifyController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;
/*   private CourseRepository courseRepository;
  private RoomRepository roomRepository;
  private UserCourseRepository userCourseRepository;
  private RoomCourseRepository roomCourseRepository; */
  @Inject
  private TokenRepository tokenRepository;

  @PostMapping(path="/password")
  public @ResponseBody Boolean verifyPassword(@RequestParam String check_password, @RequestParam String email) {
    Password hashed = new Password(userRepository.findPasswordByEmail(email), true);
    return hashed.compare(check_password);
  }
  

  @PostMapping(path="/token")
  public @ResponseBody Boolean verifyToken(@RequestParam Integer userId, @RequestParam String token) {
    Integer id = tokenRepository.findToken(userId, token, Instant.now());
    if (id != null) {
      tokenRepository.refreshToken(Instant.now().plusSeconds(604800), id);
      return true;
    }
    return false;
  }
}
